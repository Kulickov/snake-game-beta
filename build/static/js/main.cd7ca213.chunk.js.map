{"version":3,"sources":["action/appKeyDown/appKeyDown.js","components/snake/snake.js","components/food/food.js","App.js","reducers/snakeDirection/snakeDirection.js","reducers/index.js","index.js","store.js"],"names":["appKeyDown","createAction","snakeMove","largeSnake","initialAppState","snakeCrashed","getFoodCoordinates","Snake","props","snakeDots","map","dot","i","style","left","top","className","mapDispatchToProps","connect","state","snakeDirection","useState","food","setFood","useEffect","initialState","speed","App","onKeyDown","e","keyCode","moveSnake","this","moveInterval","setTimeout","speedInterval","document","onkeydown","setInterval","prevProps","prevState","checkIfEat","clearInterval","head","length","React","Component","getRandomCoordinates","Math","floor","random","initialSnake","direction","action","type","toString","payload","dots","push","shift","newSnake","unshift","snake","headSnake","stateSnake","pop","forEach","alert","combineReducers","store","createStore","rootReducer","compose","window","__REDUX_DEVTOOLS_EXTENSION__","noop","createAppStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"uSAEaA,EAAaC,YAAa,YAC1BC,EAAYD,YAAa,cACzBE,EAAaF,YAAa,eAC1BG,EAAkBH,YAAa,qBAC/BI,EAAeJ,YAAa,iBAC5BK,EAAqBL,YAAa,Y,qBCYhCM,MAhBf,SAAeC,GACb,OACE,8BACGA,EAAMC,UAAUC,KAAI,SAACC,EAAKC,GACzB,IAAMC,EAAQ,CACZC,KAAK,GAAD,OAAKH,EAAI,GAAT,KACJI,IAAI,GAAD,OAAKJ,EAAI,GAAT,MAEL,OACE,qBAAKK,UAAU,YAAoBH,MAAOA,GAAVD,S,cCc1C,IAAMK,EAAqB,CACzBX,sBASaY,eANS,SAAAC,GACtB,MAAO,CACLC,eAAgBD,EAAMC,kBAIcH,EAAzBC,EA9Bf,SAAcV,GAAQ,IACZY,EAAmBZ,EAAnBY,eADW,EAGKC,mBAAS,CAC/BP,KAAK,GAAD,OAAKM,EAAeE,KAAK,GAAzB,KACJP,IAAI,GAAD,OAAKK,EAAeE,KAAK,GAAzB,OALc,mBAGZA,EAHY,KAGNC,EAHM,KAiBnB,OATAC,qBAAU,WACN,IAAMX,EAAQ,CACZC,KAAK,GAAD,OAAKM,EAAeE,KAAK,GAAzB,KACJP,IAAI,GAAD,OAAKK,EAAeE,KAAK,GAAzB,MAELC,EAAQV,KAET,CAACO,EAAeE,OAEZ,qBAAKN,UAAU,aAAaH,MAAOS,OCRtCG,EAAe,CACnBC,MAAO,KAGHC,E,4MACJR,MAAQM,E,EAwBRG,UAAY,SAAAC,IAEV7B,EADuB,EAAKQ,MAApBR,YACG6B,EAAEC,U,EAGfC,UAAY,YAEV7B,EADsB,EAAKM,MAAnBN,c,uDA5BV,WAAqB,IAAD,OAClB8B,KAAKC,aAAeC,YAClB,kBAAM,EAAKC,kBACXH,KAAKG,eAEPC,SAASC,UAAYL,KAAKJ,Y,2BAG5B,WACEU,YAAYN,KAAKD,UAAWC,KAAKb,MAAMO,S,gCAGzC,SAAmBa,EAAWC,IAE5BnC,EADyB2B,KAAKxB,MAAtBH,gBAER2B,KAAKS,e,kCAGP,WACEC,cAAcV,KAAKC,gB,wBAarB,WAAc,IAAD,EAKPD,KAAKxB,MAHPF,EAFS,EAETA,mBACAc,EAHS,EAGTA,eACAjB,EAJS,EAITA,WAEEwC,EAAOvB,EAAeX,UAAUW,EAAeX,UAAUmC,OAAS,GAClEtB,EAAOF,EAAeE,KACtBqB,EAAK,KAAOrB,EAAK,IAAMqB,EAAK,KAAOrB,EAAK,KAC1ChB,IACAH,O,oBAIJ,WAAU,IACAiB,EAAmBY,KAAKxB,MAAxBY,eACR,OACE,qBAAKJ,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACE,cAAC,EAAD,CAAOP,UAAWW,EAAeX,YACjC,cAAC,EAAD,a,GAvDQoC,IAAMC,WAoElB7B,EAAqB,CACzBjB,aACAE,YACAC,aACAC,kBACAE,qBACAD,gBAGaa,eAfS,SAAAC,GACtB,MAAO,CACLC,eAAgBD,EAAMC,kBAacH,EAAzBC,CAA6CS,G,qBCxFtDoB,EAAuB,WAK3B,MAAO,CAF2D,EAA1DC,KAAKC,OAAO,GAAAD,KAAKE,SAFf,GAEmD,GACK,EAA1DF,KAAKC,OAAO,GAAAD,KAAKE,SAHf,GAGmD,KAIzDC,EAAe,CACnBC,UAAW,QACX9B,KAAMyB,IACNtC,UAAW,CACT,CAAC,EAAG,GACJ,CAAC,EAAG,KAkGOW,EA9FQ,WAAmC,IAAlCD,EAAiC,uDAAzBgC,EAAcE,EAAW,uCACvD,OAAQA,EAAOC,MACb,KAAKtD,EAAWuD,WACd,OAAQF,EAAOG,SACb,KAAK,GACH,OAAO,2BACFrC,GADL,IAEEiC,UAA+B,SAApBjC,EAAMiC,UAAuB,KAAO,SAEnD,KAAK,GACH,OAAO,2BACFjC,GADL,IAEEiC,UAA+B,OAApBjC,EAAMiC,UAAqB,OAAS,OAEnD,KAAK,GACH,OAAO,2BACFjC,GADL,IAEEiC,UAA+B,UAApBjC,EAAMiC,UAAwB,OAAS,UAEtD,KAAK,GACH,OAAO,2BACFjC,GADL,IAEEiC,UAA+B,SAApBjC,EAAMiC,UAAuB,QAAU,SAEtD,QACE,OAAOjC,EAEb,KAAKjB,EAAUqD,WACb,IAAIE,EAAI,YAAOtC,EAAMV,WACjBkC,EAAOc,EAAKA,EAAKb,OAAS,GAC9B,OAAQzB,EAAMiC,WACZ,IAAK,SACHT,EAAO,CAACA,EAAK,GAAK,EAAGA,EAAK,KACjB,GAAK,KACZA,EAAO,CAAEA,EAAK,GAAK,EAAIA,EAAK,KAE9B,MACF,IAAK,QACHA,EAAO,CAACA,EAAK,GAAK,EAAGA,EAAK,KACjB,GAAK,IACZA,EAAO,CAAEA,EAAK,GAAK,GAAKA,EAAK,KAE/B,MACF,IAAK,QACHA,EAAO,CAACA,EAAK,GAAIA,EAAK,GAAK,IAClB,GAAK,KACZA,EAAO,CAACA,EAAK,GAAKA,EAAK,GAAK,IAE9B,MACF,IAAK,MACHA,EAAO,CAACA,EAAK,GAAIA,EAAK,GAAK,IAClB,GAAK,IACZA,EAAO,CAACA,EAAK,GAAKA,EAAK,GAAK,KAE9B,MACF,QACE,OAIJ,OAFAc,EAAKC,KAAKf,GACVc,EAAKE,QACE,2BACFxC,GADL,IAEEV,UAAWgD,IAEf,KAAKtD,EAAWoD,WACd,IAAIK,EAAQ,YAAOzC,EAAMV,WAEzB,OADAmD,EAASC,QAAQ,IACV,2BACF1C,GADL,IAEEV,UAAWmD,IAEf,KAAKtD,EAAmBiD,WACtB,OAAO,2BACFpC,GADL,IAEEG,KAAMyB,MAEV,KAAK1C,EAAakD,WAChB,IAAIO,EAAK,YAAO3C,EAAMV,WAClBsD,EAAYD,EAAMA,EAAMlB,OAAS,GACjCoB,EAAa7C,EAQjB,OAPA2C,EAAMG,MACNH,EAAMI,SAAQ,SAAAvD,GACRoD,EAAU,KAAOpD,EAAI,IAAMoD,EAAU,KAAOpD,EAAI,KAClDwD,MAAM,gIAAD,OAA6BhD,EAAMV,UAAUmC,OAAS,EAAtD,oCACLoB,EAAab,MAGVa,EACT,QACE,OAAO7C,IC/GEiD,cAAgB,CAC7BhD,mBCGIiD,ECHiB,WAUnB,OATcC,YACVC,EACAC,YAEIC,OAAOC,6BAA+BD,OAAOC,+BAC3C,SAAAC,GAAI,OAAIA,KDHRC,GAEdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJjC,SAAS4C,eAAe,W","file":"static/js/main.cd7ca213.chunk.js","sourcesContent":["import { createAction } from \"redux-actions\";\n\nexport const appKeyDown = createAction(\"KEY_DOWN\");\nexport const snakeMove = createAction(\"SNAKE_MOVE\");\nexport const largeSnake = createAction(\"LARGE_SNAKE\");\nexport const initialAppState = createAction(\"INITIAL_APP_STATE\");\nexport const snakeCrashed = createAction(\"SNAKE_CRASHED\");\nexport const getFoodCoordinates = createAction(\"GET_FOOD\");\n","import React from 'react';\r\nimport './snake.scss';\r\n\r\nfunction Snake(props) {\r\n  return (\r\n    <div>\r\n      {props.snakeDots.map((dot, i) => {\r\n        const style = {\r\n          left: `${dot[0]}%`,\r\n          top: `${dot[1]}%`\r\n        }\r\n        return (\r\n          <div className=\"snake-dot\" key={i} style={style}></div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Snake;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getFoodCoordinates } from \"../../action/appKeyDown/appKeyDown\";\r\n\r\nimport \"./food.scss\";\r\n\r\nfunction Food(props) {\r\n  const { snakeDirection } = props;\r\n\r\n  const [food, setFood] = useState({\r\n    left: `${snakeDirection.food[0]}%`,\r\n    top: `${snakeDirection.food[1]}%`\r\n  });\r\n\r\n  useEffect(() => {\r\n      const style = {\r\n        left: `${snakeDirection.food[0]}%`,\r\n        top: `${snakeDirection.food[1]}%`\r\n      }\r\n      setFood(style);\r\n\r\n  }, [snakeDirection.food])\r\n\r\n  return <div className=\"snake-food\" style={food}></div>;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getFoodCoordinates\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    snakeDirection: state.snakeDirection\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Food);\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  appKeyDown,\n  snakeMove,\n  largeSnake,\n  initialAppState,\n  snakeCrashed,\n  getFoodCoordinates\n} from \"./action/appKeyDown/appKeyDown\";\n\nimport \"./App.scss\";\nimport Snake from \"./components/snake/snake\";\nimport Food from \"./components/food/food\";\n\nconst initialState = {\n  speed: 150\n};\n\nclass App extends React.Component {\n  state = initialState;\n\n  componentDidMount() {\n    this.moveInterval = setTimeout(\n      () => this.speedInterval(),\n      this.speedInterval\n    );\n    document.onkeydown = this.onKeyDown;\n  }\n\n  speedInterval() {\n    setInterval(this.moveSnake, this.state.speed);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { snakeCrashed } = this.props;\n    snakeCrashed();\n    this.checkIfEat();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.moveInterval);\n  }\n\n  onKeyDown = e => {\n    const { appKeyDown } = this.props;\n    appKeyDown(e.keyCode);\n  };\n\n  moveSnake = () => {\n    const { snakeMove } = this.props;\n    snakeMove();\n  };\n\n  checkIfEat() {\n    const {\n      getFoodCoordinates,\n      snakeDirection,\n      largeSnake\n    } = this.props;\n    let head = snakeDirection.snakeDots[snakeDirection.snakeDots.length - 1];\n    let food = snakeDirection.food;\n    if (head[0] === food[0] && head[1] === food[1]) {\n      getFoodCoordinates();\n      largeSnake();\n    }\n  }\n\n  render() {\n    const { snakeDirection } = this.props;\n    return (\n      <div className=\"App\">\n        <div className=\"game-field\">\n          <Snake snakeDots={snakeDirection.snakeDots} />\n          <Food />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    snakeDirection: state.snakeDirection\n  };\n};\n\nconst mapDispatchToProps = {\n  appKeyDown,\n  snakeMove,\n  largeSnake,\n  initialAppState,\n  getFoodCoordinates,\n  snakeCrashed,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  appKeyDown,\n  snakeMove,\n  largeSnake,\n  snakeCrashed,\n  getFoodCoordinates\n} from \"../../action/appKeyDown/appKeyDown\";\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 96;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 4) * 4;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 4) * 4;\n  return [x, y];\n};\n\nconst initialSnake = {\n  direction: \"RIGHT\",\n  food: getRandomCoordinates(),\n  snakeDots: [\n    [0, 0],\n    [4, 0]\n  ]\n};\n\nconst snakeDirection = (state = initialSnake, action) => {\n  switch (action.type) {\n    case appKeyDown.toString():\n      switch (action.payload) {\n        case 38:\n          return {\n            ...state,\n            direction: state.direction !== \"DOWN\" ? \"UP\" : \"DOWN\"\n          };\n        case 40:\n          return {\n            ...state,\n            direction: state.direction !== \"UP\" ? \"DOWN\" : \"UP\"\n          };\n        case 37:\n          return {\n            ...state,\n            direction: state.direction !== \"RIGHT\" ? \"LEFT\" : \"RIGHT\"\n          };\n        case 39:\n          return {\n            ...state,\n            direction: state.direction !== \"LEFT\" ? \"RIGHT\" : \"LEFT\"\n          };\n        default:\n          return state;\n      }\n    case snakeMove.toString():\n      let dots = [...state.snakeDots];\n      let head = dots[dots.length - 1];\n      switch (state.direction) {\n        case \"RIGHT\":\n          head = [head[0] + 4, head[1]];\n          if (head[0] > 96) {\n            head = [(head[0] = 0), head[1]];\n          }\n          break;\n        case \"LEFT\":\n          head = [head[0] - 4, head[1]];\n          if (head[0] < 0) {\n            head = [(head[0] = 96), head[1]];\n          }\n          break;\n        case \"DOWN\":\n          head = [head[0], head[1] + 4];\n          if (head[1] > 96) {\n            head = [head[0], (head[1] = 0)];\n          }\n          break;\n        case \"UP\":\n          head = [head[0], head[1] - 4];\n          if (head[1] < 0) {\n            head = [head[0], (head[1] = 96)];\n          }\n          break;\n        default:\n          return;\n      }\n      dots.push(head);\n      dots.shift();\n      return {\n        ...state,\n        snakeDots: dots\n      };\n    case largeSnake.toString():\n      let newSnake = [...state.snakeDots];\n      newSnake.unshift([]);\n      return {\n        ...state,\n        snakeDots: newSnake\n      };\n    case getFoodCoordinates.toString():\n      return {\n        ...state,\n        food: getRandomCoordinates()\n      };\n    case snakeCrashed.toString():\n      let snake = [...state.snakeDots];\n      let headSnake = snake[snake.length - 1];\n      let stateSnake = state;\n      snake.pop();\n      snake.forEach(dot => {\n        if (headSnake[0] === dot[0] && headSnake[1] === dot[1]) {\n          alert(`Игра окончена, ты набрал ${state.snakeDots.length - 2} очков`);\n          stateSnake = initialSnake;\n        }\n      });\n      return stateSnake;\n    default:\n      return state;\n  }\n};\n\n\nexport default snakeDirection;\n","import { combineReducers } from \"redux\";\nimport snakeDirection from './snakeDirection/snakeDirection';\n\nexport default combineReducers({\n  snakeDirection,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport createAppStore from \"./store\";\nimport { Provider } from \"react-redux\";\n\nconst store = createAppStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { createStore, compose } from 'redux';\n// import tvmazeFeatchMiddleware from './tvmazeFeatchMiddleware';\nimport rootReducer from './reducers';\n//\nconst createAppStore = () => {\n    const store = createStore(\n        rootReducer,\n        compose(\n            // applyMiddleware(tvmazeFeatchMiddleware),\n            window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__()\n            : noop => noop\n        )\n    );\n\n    return store;\n};\n\nexport default createAppStore;\n"],"sourceRoot":""}